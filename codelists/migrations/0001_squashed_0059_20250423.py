# Generated by Django 5.1.8 on 2025-04-23 15:12

import datetime
import django.db.migrations.operations.special
import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# codelists.migrations.0006_auto_20200722_1437
# codelists.migrations.0011_auto_20201112_0857
# codelists.migrations.0021_auto_20201119_0932
# codelists.migrations.0023_auto_20201122_1448
# codelists.migrations.0026_auto_20201126_1701
# codelists.migrations.0032_auto_20210423_1116
# codelists.migrations.0034_auto_20210429_1029
# codelists.migrations.0037_auto_20210511_1446
# codelists.migrations.0039_auto_20210519_1401
# codelists.migrations.0043_auto_20210526_0952
# codelists.migrations.0045_resolve_duplicate_handles
# codelists.migrations.0048_fix_github_references
# codelists.migrations.0050_set_codelistversion_author
# codelists.migrations.0052_add_author_to_under_review_versions
# codelists.migrations.0056_data_migration_add_coding_system_version

class Migration(migrations.Migration):

    # replaces = [('codelists', '0001_initial'), ('codelists', '0002_auto_20200424_0943'), ('codelists', '0003_auto_20200628_0923'), ('codelists', '0004_auto_20200722_1437'), ('codelists', '0005_codelistversion'), ('codelists', '0006_auto_20200722_1437'), ('codelists', '0007_auto_20200722_1438'), ('codelists', '0008_swap_name_for_slug_in_codelist_uniqueness_constraint'), ('codelists', '0009_auto_20201110_1957'), ('codelists', '0010_codelist_organisation'), ('codelists', '0011_auto_20201112_0857'), ('codelists', '0012_auto_20201112_0924'), ('codelists', '0013_auto_20201112_0938'), ('codelists', '0014_remove_codelist_project'), ('codelists', '0015_auto_20201116_1744'), ('codelists', '0016_auto_20201116_1754'), ('codelists', '0017_auto_20201119_0927'), ('codelists', '0018_auto_20201119_0927'), ('codelists', '0019_auto_20201119_0930'), ('codelists', '0020_auto_20201119_0932'), ('codelists', '0021_auto_20201119_0932'), ('codelists', '0022_auto_20201122_1444'), ('codelists', '0023_auto_20201122_1448'), ('codelists', '0024_codelistversion_discarded'), ('codelists', '0025_auto_20201123_1708'), ('codelists', '0026_auto_20201126_1701'), ('codelists', '0027_auto_20210114_1139'), ('codelists', '0028_collaboration'), ('codelists', '0029_auto_20210223_1123'), ('codelists', '0030_auto_20210412_0947'), ('codelists', '0031_auto_20210413_0829'), ('codelists', '0032_auto_20210423_1116'), ('codelists', '0033_auto_20210429_1029'), ('codelists', '0034_auto_20210429_1029'), ('codelists', '0035_auto_20210429_1035'), ('codelists', '0036_codelistversion_status'), ('codelists', '0037_auto_20210511_1446'), ('codelists', '0038_auto_20210511_1455'), ('codelists', '0039_auto_20210519_1401'), ('codelists', '0040_remove_codelistversion_discarded'), ('codelists', '0041_alter_codelistversion_status'), ('codelists', '0042_cachedhierarchy'), ('codelists', '0043_auto_20210526_0952'), ('codelists', '0044_auto_20210608_1515'), ('codelists', '0045_resolve_duplicate_handles'), ('codelists', '0046_alter_handle_unique_together'), ('codelists', '0047_auto_20220125_1404'), ('codelists', '0048_fix_github_references'), ('codelists', '0049_codelistversion_author'), ('codelists', '0050_set_codelistversion_author'), ('codelists', '0051_remove_codelistversion_draft_owner'), ('codelists', '0052_add_author_to_under_review_versions'), ('codelists', '0053_codelist_is_private'), ('codelists', '0054_codelist_tags'), ('codelists', '0055_codelistversion_coding_system_release'), ('codelists', '0056_data_migration_add_coding_system_version'), ('codelists', '0057_codelistversion_compatible_releases'), ('codelists', '0058_codelistversion_cached_csv_data'), ('codelists', '0059_alter_search_unique_together')]

    initial = True

    dependencies = [
        ('opencodelists', '0001_squashed_0009_20250423'),
        ('taggit', '0005_auto_20220424_2025'),
        ('versioning', '0001_squashed_0004_20250425'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Codelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coding_system_id', models.CharField(choices=[('bnf', 'Pseudo BNF'), ('ctv3', 'CTV3 (Read V3)'), ('dmd', 'Dictionary of Medicines and Devices'), ('icd10', 'ICD-10'), ('null', 'No coding system'), ('opcs4', 'OPCS-4'), ('readv2', 'Read V2'), ('snomedct', 'SNOMED CT')], max_length=32, verbose_name='Coding system')),
                ('description', models.TextField(blank=True, null=True)),
                ('methodology', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_private', models.BooleanField(default=False)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='SignOff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('codelist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signoffs', to='codelists.codelist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('codelist', 'user')},
            },
        ),
        migrations.CreateModel(
            name='CodelistVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=12, null=True)),
                ('csv_data', models.TextField(null=True, verbose_name='CSV data')),
                ('codelist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='codelists.codelist')),
                ('created_at',models.DateTimeField(auto_now_add=True)),
                ('updated_at',models.DateTimeField(auto_now=True)),
                ('status',models.CharField(choices=[('draft', 'Draft'), ('under review', 'Under Review'), ('published', 'Published')], max_length=12)),
                ('author',models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='versions', to=settings.AUTH_USER_MODEL)),
                ('coding_system_release',models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codelist_versions', to='versioning.codingsystemrelease')),
                ('compatible_releases',models.ManyToManyField(to='versioning.codingsystemrelease')),
                ('cached_csv_data',models.JSONField(default=dict)),
            ],
            options={
                'unique_together': {('codelist', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='CodeObj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=18)),
                ('status', models.CharField(choices=[('?', 'Undecided'), ('!', 'In conflict'), ('+', 'Included with descendants'), ('(+)', 'Included by ancestor'), ('-', 'Excluded with descendants'), ('(-)', 'Excluded by ancestor')], default='?', max_length=3)),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_objs', to='codelists.codelistversion')),
            ],
            options={
                'unique_together': {('version', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('url', models.URLField(max_length=1000)),
                ('codelist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='codelists.codelist')),
            ],
            options={
                'unique_together': {('codelist', 'url')},
            }
        ),
        migrations.CreateModel(
            name='Search',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(max_length=255)),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='searches', to='codelists.codelistversion')),
                ('code', models.CharField(max_length=18, null=True)),
            ],
            options={
                'constraints':[models.CheckConstraint(condition=models.Q(models.Q(('code__isnull', True), ('term__isnull', False)), models.Q(('code__isnull', False), ('term__isnull', True)), _connector='OR'), name='codelists_search_term_xor_code')],
            },
        ),
        migrations.CreateModel(
            name='SearchResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='codelists.codeobj')),
                ('search', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='codelists.search')),
            ],
            options={
                'unique_together': {('search', 'code_obj')},
            },
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('codelist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborations', to='codelists.codelist')),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Handle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('is_current', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('codelist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='handles', to='codelists.codelist')),
                ('organisation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='handles', to='opencodelists.organisation')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='handles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('organisation_id__isnull', False), ('user_id__isnull', True)), models.Q(('organisation_id__isnull', True), ('user_id__isnull', False)), _connector='OR'), name='codelists_handle_organisation_xor_user')],
                'unique_together': {('organisation', 'name'), ('organisation', 'slug'), ('user', 'name'), ('user', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='CachedHierarchy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField()),
                ('version', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cached_hierarchy', to='codelists.codelistversion')),
            ],
        ),
    ]
