export DOCKER_USERID := `id -u`
export DOCKER_GROUPID := `id -g`

# Load .env files by default
set dotenv-load := true

# enable modern docker build features
export DOCKER_BUILDKIT := "1"

export BIN := "/opt/venv/bin"

export DEV_USERID := `id -u`
export DEV_GROUPID := `id -g`


build env="dev":
    #!/usr/bin/env bash

    # set build args for prod builds
    export BUILD_DATE=$(date -u +'%y-%m-%dT%H:%M:%SZ')
    export GITREF=$(git rev-parse --short HEAD)

    # build the thing
    docker compose build --pull {{ env }}


# run JS linter
check-js:
    docker compose run --rm node-assets bash -c "npm run typecheck && npm run lint:ci"

# run python checks
check-py env="dev": build
    docker compose run --rm {{ env }} /app/docker/entrypoints/check.sh

check-migrations env="dev" *args="": build
    docker compose run --rm {{ env }} python manage.py makemigrations --check {{ args }}

# run Python (non-functional) tests in docker container
test-py *args="":
    docker compose run --rm \
    -e TEST_IN_DOCKER="true" \
    test python -m pytest \
    --cov=builder \
    --cov=codelists \
    --cov=coding_systems \
    --cov=mappings \
    --cov=opencodelists \
    --cov-report html \
    --cov-report term-missing:skip-covered \
    -m "not functional" {{ args }}

# run functional tests in docker container
test-functional *args="":
    docker compose run --rm test python -m pytest \
    -m "functional" {{ args }}

test-js:
    docker compose run --rm node-assets bash -c "npm run test:coverage"

test: test-js test-py test-functional

_create_storage env:
    #!/usr/bin/env bash
    set -euo pipefail

    if [ "{{ env }}" = "prod" ]; then
        SCRIPT_DIR={{justfile_directory()}}
        if ! test -d "$SCRIPT_DIR/storage"; then
            mkdir -p "$SCRIPT_DIR/storage"
        fi
        sudo chown 10003:10003 "$SCRIPT_DIR/storage"
    fi


# run dev server in docker container
serve env="dev" *args="": (_create_storage env)
    docker compose up {{ args }} {{ env }}


# run command in dev container
run env="dev" *args="bash":
    docker compose run {{ env }} {{ args }}


# exec command in existing dev container
exec env="dev" *args="bash":
    docker compose exec {{ env }} {{ args }}


# run a basic functional smoke test against a running opencodelists
smoke-test host="http://localhost:7000" env="prod":
    #!/bin/bash
    set -eu
    echo "Running release script (check and migrations)..."
    docker compose exec {{ env }} bash /app/deploy/release.sh
    echo "Testing service connectivity..."
    curl -I {{ host }} -s --compressed --fail --retry 20 --retry-delay 1 --retry-all-errors
